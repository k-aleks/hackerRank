using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Runtime.InteropServices.ComTypes;
using System.Security.Principal;
using FluentAssertions;
using NUnit.Framework;

namespace hackerRank
{
    [TestFixture]
    internal class Solution_Tests
    {
        [TestCase("tabriz", "torino", 2, 4)]
        [TestCase("uvtedmbqjjazboxbephroffzguecvykbhyafuhsohmetnmdgqpihumsmoxirjrupgnocppctglnmbvolxuubohegeofgshufltgguaymvyoxpmdklbgkdkkzscsxcxcslistafhkzoisxkkqdqavjnuommxxteuxzgfvmusxlsqdueejicvbkizfbvodusbvruqxbcodzybsxazdglvxzzgnsudxfrbtqrfooprbdoxnodpblnlrypdobzgqnsigezdpkhkphonxgabnkgjsvypcrcgehiehljruykpduxoesekjfpbfpxqmyknvrjncmcretfcolzuabqzlezdyopnrsqpuhzzkmgchbsiohnydxydeytxntrpnxhatiqukhsflcifiehccbhjfgnrettuyxktgauboqulrhymjnxzqhcqsfdmmhgiepbbrmhznkfnadvlfplhcszuyzotbxkuysbqleqnypigncvicnjirkvdtdikzdyfmzeccuxmtorcaapjrsahkylcmsejsaumgmlhrofrlvkqglxcnrqmebuuuvaxmatkdnqzoxdkoxuqkrhcoqjbvbmgjrzohthnhqaanngsxqephzmqesecfccsakgznnjmhoucjtebvzigoryroprrmiidxyrtpocniqoalxqhloxcdplhuvthqsyjznbqmantrbxgoqgdnzyhvpovndgkxmsszfbaqkoimnyxsbvavxmkxhkzoedijyspvzsjknrcvradybzeanesxxuzvxmqtjabnmlcnayysgjxrfsjrcjaoyuliehuqyyoxpezfgxxhgsihqomhppjyitiyiyikomklvuoxbkemkervhucidnoynxcyflyqleagpqkgmnquueexspnoxqpapdatsfzzihiusagklunvcvaavslybundctzqdzfercjpjieobdemnnxbivroxkfhdvhqztcrlsvakyhchaluknxkpknoyrbyyrbuidvjlknssyurtvelfxfletkssjgnlveiysfkajkedvmxarptqrxpnitltailrgbcjjhoyyefdgrbbxzijryihyucszdlijikkivckzkipzclefeeypbstotofgnrovyczkeucfmlcxqyjumlavxutlqaxvtyixeshykftrmjxrzmihffngmdtssnkmvkrhveqocynehdysdevpqfpkkequfavldkibfokesqcpjhmuvamkxebfodaczprkhbblnrliullczyeotqmuyzvsibslxnatqtfarkltzjbfsyaysitcsfohbnpjzopnxeknrecknphcoerfgpzxroyvmunryapmjglacplehabtlgfczttgyvilikbinxskheksgfmaxvlgayfjfebtgsmoprknxvhzzmyaotblsdallzpdzkscgteuhfiygojbdotdorfalsxjjnnjvtdacharuhxrthmkpbobvrjcooonqqzpuvmjcsffzx",
            "vlceyrlgrugkjoblzfxneijkrhrfgvytmmesgbcfphagtdezgjazvytozaplhfpeqxbzxefoiknedxvongyslxzlkaeisjbvgsnnauhkiivbfqkpkjiyjsyftrjtkykixfdiojerqebljlqqmttlfzdutumbsgvlohimtajbpppqznxyejzutljuuylastgbykmnyzthyqzvrtjceuhcmnzfzxseaxxzuynzxynipeidmzsroyuahxtkubeecikuayybyxrnzyafxgkazrovhgsypljpclpzqnlfojosubpfhgstvpxylxbjoqlhthiljdcsqugbgxyltydujmqcbpuytzqrbjptomiromzybicefazzmmredurkvgdrqzvdtrrsimpdzxsogsvreflykbrmleebvdxmurmpnxypetrviatqddkbdmggarlndiovgqpkutyjhkagmpcyirkrffyyvxagvpeyhhefsgcfiupmaydlcmegrhejkgmqtldhgudrltepagpgpfxoqplooskudszfvqobcckexqserdduxfmgkypgcsohcmfyrxrbvgggnfhehhkeckttxrpgrlxsrxetcdnsqesvifajnjlhtceiickvneiamkxonftamyuollbfzvjpecaquzimjpjckajvfjzcfgbhzqaougndjbjrgbvyhetpaxfjdlnrlmlstdplpyxggbokhsretpbzrddmgbuksexevratqkagtmacfcfelbpprbvtgipntbgtluuccoxpxexnyellnjcshsprjdliepcdsjjqsemkujlnzeiburrzubtfbdkuolqnoejjfkzmgxgebyygajffjttyeqojsyeeadbbyayrskmgajvexyyyxvxtcqlqsrqlelrdeuxidrpiyfjczjlauseyuqzkcyzoytubljggpbstgvcgqehpciurrjjrpxxhvsmdnrezijvqcvyzsubfidltxhijmtaprjsoieoabzxsqzvtexsxgdxbiztnqlrjocrclecpbsaeszgqzooliazpebzelvdmvxvormexinetkbtcxaxokulrboqlmmcrsrviclyxtgaymxhharimlaanfqpshuadxghtevlcajmtmqtyvokjxccieuaxpsmegmhjuaxlclmblbpkabtqrmrspsippxtydrodctnbignjoyacldgtsotovqqeejbqiaskghqfegdijlrvkdecgxzdfjlolbimzialprvsdnjljqltyczvhbtdoeechkosiydsceenaafvdgkgdlidzzoiogvjnafcsymrrkylnqjkpzvnbzgsarorudfryeitybpaqziltyplfepguixbblvzzqrcmyvfjggpsvtdgccqyfyukyxxycnetjnaavehnuehlvtaifykkazkcklfqllxreltmzmxhcqhizjymdezzjlgussulurgykaeevmpmabjjprnpxvnztfgnbqmbhue",
            31, 40)]
        [TestCase("iareifjvcrckltvlhlptjrkfmsgzdxaaqrsjnxsyervevfvsghstodesloepremnecaohpghcfkhacqessakgpojjgpiznebrpenssdmajlmeunjhzfsgjcqorgzekcyzicoqhrfvxfbryjoqpqckvmkvpryasfmtaejemlyzcgvfnsqystlsfplllnqniopzgeygvgybacykiqszbolkgcpyfpcjhmahbmvatvytduipisafrspshksqonpccslzheubokbyqrmakuigilajiztulojmlpksqgftaztlkcijbdqirlbpdfjhlpzqqbyjbkzqizvegudnkoxyaegecbuutpvkvxhbebrigmggnfkjapqhfulruinnlvmszxbvinnmtyfxicixyfehkoiidapooymjorqkpzzldimvufafvqbgqcotmuircepzzpuauaanssdaebxajqshbshypbscdbdjxekurpngkrcemmdvrspulhkkyvcgkmkyhuongukyjafarfxhxhyxnfduahavnxlarqlxccppasrsbsxzquvfdlxlopenrlpsohhsirbuosxqxeuvqhlrpilkmrahbvnsouuuuzloagepekmjeyipnzgeqofconrqbolsybuashpztffcqdeeqxkicnbcpaunqdtufdyhdnmvnpeoclfqrtxmpedledeyluvfjaplodyxdrgasuvmciofuvtehvrpfqpkplihqirroxfgghutogxeyxqrpdfshqjqdahjajpxnzmdtiimenbdomoqyhpdoqjtjxjnfkqhagudavpekdifjvpcpvfztqgtfrkhbnocunnhpduccisdyigmdqlenxzurcazixxsxvppsplolvloifzjtamryvqyajuetrvkzsfhndczfnpusfycauqhdmvnkgcvshqmpqngrhldcjgmahpinsctdrrdfhgbuplscfervdtpogimjcyhgovgqlbtxssnqdtouvzkgsteoyzehcgrniropfjmdzszbmaeocyeujumedksliarevuqbjcglzitizfbcbhkuffvgoggcvmakqilngnddrgrlqjoyfxptxfmraqeraxooqbjpukyqhpzopnbeyumcjmmvqyypqblenlaoezxxmiuczrqguvqoydkvliytslzvhddyobatmvpnemkmjysbabdnfydtjpetldfqtnavbdtlgjttzhspxcyyamgochsqflcupioqsuejlkvddavjdgymgplryquzqejuyojfysjnmmbjbskuzylaoikbavhuroepcedvddxchxoceukhdrmoukrjjmemopqdqsuumvkuvdgsxkosvzgpunxkiokhjxxfflcenybszkmcyjbhzxhumdxhain",
            "asjqprroaxfhqjqapovlunzhkmzrdguevtzdngtgeadhjzxkrztkgtxqokrajbfzoyoptdzfcurafxjecedcqizkogavgrkoeqqatggngzstidjvdjdrdxnfgdqkhyonxxkmpqijfpvgmhxbblahfrrejnakvgarxdnamqlvjrmixuyuiqnpysbjahfcqyymlipigqhmpqnoijpydaatovkeqnxygmchhiqubkotlznkcvqbxfmytlapczfblanqxrexzoxqeixfyntvheplajfmbxsffhueqfizzarpeeinloczbdsspgmqkfmidiruxtxrcfuompaxafdjqmzdsxpzigtlqmvyczzvptocntaqelgjfnmgqrrkjisqanxxtqsvxlduzdunqurzitvhsunqdsykenvmncekhvqmjsvzuphvdgqsiccbgccmsratjiuafhqmycisoqkxntasfvkhhiiujrjieipoxcbbyjzrhncbcxvezqmcktglyessclepfxkeeygtyuvxtktiagrtzxcoraujlpbuynbpkxsrrsbeagaqcdezlnzqrskrashzmsigtzbkmncayzebsugkbfyxqktvhhqiihtqpnrmfotmunggufobobqffelrqfipvvrvdlttkschhrvfdfecomrrjlfmjxobudaireagdsvdpgikvusbcudrorbhjnqjhppluciblzeryqcdbyjqnpoobogtseynsklzuqouxljqlkcbetrvtgqrjgqmpjuafiyczhldmipqmytkfkloeidaokspuimoxrtdcdzyldkgeebrtxsgipvodjqaqsojuxvitpnucduudjprthyclvkzdilrsikttyndftkigbcvaicafcpzigklpczifduugucxxudnlvstaxkjrrzfrgvuusrpfzdniaqqaiyqbqqqcojtxyjboxxdpzndqrqvrhptanjsymtaeorhosjgsseiicvyektqbppecfsqllbqxffqvgonvvftxfiqznktmpcilbosyejkmyalfxjqmbvmlkalhaakjrafxxfydgafkrhaiiouvbpouqzgebqadotekylmpviiercniorpcnimcdgavpynxhfuimngalgmglagpxbcicgmjvpxpzhcavdbaltjrougvgyngfsiidyblapguheedcjzskqujulyngudjkogqbooqtqlxycvnifgbvrvhlqbufcughccxnoakyngpdlojddbbizelbqlcyqlbkfffkkzbxgjqerqijtcevixqodqbyhsmugsmdpbehxmhthyafzxbeoihumtsynguzssljknxarkzqonhtbrbckcshezbrmziribgibidsuzxkrnubrgzgebhqvuluefrxpop",
            946, 1011)]
        public void Test_GetMaxSubstringLength(string s1, string s2, int maxDixx, int expected)
        {
            var res = Solution.GetMaxSubstringLength(s1, s2, maxDixx);
            res.Should().Be(expected);
        }
    }
}
